import fetch from 'node-fetch';

async function testSSEIntegration() {
  console.log('🚀 Testing SSE Integration...\n');
  
  // Start async workflow
  const response = await fetch('http://localhost:3456/api/invoke/async', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      workflow: [
        { id: 'step1', role: 'developer', task: 'Say hello' },
        { id: 'step2', role: 'developer', task: 'Say world', deps: ['step1'] }
      ],
      projectId: '93b33a8b-dbc0-4b09-99ed-cb737239b409'
    })
  });
  
  const result = await response.json();
  console.log('📋 Workflow started:', result);
  
  // Connect to SSE
  console.log('\n📡 Connecting to SSE stream...');
  const sseUrl = `http://localhost:3456/api/invoke/stream/${result.threadId}`;
  
  // Manual SSE handling with fetch
  const sseResponse = await fetch(sseUrl, {
    headers: { 'Accept': 'text/event-stream' }
  });
  
  console.log('SSE Response Status:', sseResponse.status);
  console.log('SSE Response Headers:', sseResponse.headers.raw());
  
  // Read the first few chunks
  const reader = sseResponse.body;
  let buffer = '';
  
  // Set up a promise to read for 5 seconds
  const readPromise = new Promise((resolve) => {
    const timeout = setTimeout(() => {
      resolve(buffer);
    }, 5000);
    
    reader.on('data', (chunk) => {
      const text = chunk.toString();
      buffer += text;
      
      // Parse SSE events
      const lines = text.split('\n');
      for (const line of lines) {
        if (line.startsWith('data: ')) {
          const data = line.slice(6);
          if (data.trim()) {
            try {
              const event = JSON.parse(data);
              console.log('📨 SSE Event:', JSON.stringify(event, null, 2));
            } catch (e) {
              console.log('📝 SSE Data:', data);
            }
          }
        }
      }
    });
  });
  
  await readPromise;
  
  // Check final status
  console.log('\n📊 Final status:');
  const statusResponse = await fetch(`http://localhost:3456/api/invoke-status/status/${result.threadId}`);
  const status = await statusResponse.json();
  console.log(JSON.stringify(status, null, 2));
  
  process.exit(0);
}

testSSEIntegration().catch(err => {
  console.error('❌ Error:', err);
  process.exit(1);
});