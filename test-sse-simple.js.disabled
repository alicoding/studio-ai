import fetch from 'node-fetch';

async function testSSE() {
  console.log('🚀 Testing SSE with simple fetch...\n');
  
  // Start async workflow
  const response = await fetch('http://localhost:3456/api/invoke/async', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      workflow: {
        role: 'developer',
        task: 'Say hello world'
      },
      projectId: '93b33a8b-dbc0-4b09-99ed-cb737239b409'
    })
  });
  
  const result = await response.json();
  console.log('📋 Async response:', result);
  
  // Connect to SSE stream using fetch
  console.log('\n📡 Connecting to SSE stream...');
  const sseResponse = await fetch(`http://localhost:3456/api/invoke/stream/${result.threadId}`, {
    headers: {
      'Accept': 'text/event-stream'
    }
  });
  
  const reader = sseResponse.body.getReader();
  const decoder = new TextDecoder();
  
  const events = [];
  let buffer = '';
  
  // Read for 5 seconds
  const timeout = setTimeout(() => {
    reader.cancel();
  }, 5000);
  
  try {
    while (true) {
      const { done, value } = await reader.read();
      if (done) break;
      
      buffer += decoder.decode(value, { stream: true });
      const lines = buffer.split('\n');
      buffer = lines.pop() || '';
      
      for (const line of lines) {
        if (line.startsWith('data: ')) {
          const data = line.slice(6);
          if (data.trim()) {
            try {
              const event = JSON.parse(data);
              console.log('SSE Event:', JSON.stringify(event, null, 2));
              events.push(event);
            } catch (e) {
              console.log('SSE Data:', data);
            }
          }
        }
      }
    }
  } catch (e) {
    // Expected when we cancel the reader
  }
  
  clearTimeout(timeout);
  
  // Check final status
  console.log('\n📊 Final status:');
  const statusResponse = await fetch(`http://localhost:3456/api/invoke-status/status/${result.threadId}`);
  const status = await statusResponse.json();
  console.log(JSON.stringify(status, null, 2));
  
  console.log('\n📈 SSE Event Summary:');
  console.log(`Total events received: ${events.length}`);
  events.forEach((event, i) => {
    console.log(`  ${i + 1}. ${event.type} ${event.stepId ? `(step: ${event.stepId})` : ''}`);
  });
  
  process.exit(0);
}

testSSE().catch(err => {
  console.error('❌ Error:', err);
  process.exit(1);
});