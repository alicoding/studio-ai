version: '3.8'

services:
  studio-ai:
    build: .
    container_name: studio-ai-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - USE_POSTGRES_SAVER=true
      - POSTGRES_CONNECTION_STRING=postgresql://studio:${POSTGRES_PASSWORD:-studio_dev_pass}@postgres:5432/studio_ai
      - REDIS_URL=redis://redis:6379
      - STUDIO_AI_ENCRYPTION_KEY=${ENCRYPTION_KEY:-generate_secure_key_in_production}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
    volumes:
      - app_data:/app/data
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: studio-ai-postgres
    environment:
      POSTGRES_DB: studio_ai
      POSTGRES_USER: studio
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-studio_dev_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./web/server/database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U studio -d studio_ai"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: studio-ai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: studio-ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - studio-ai
    restart: unless-stopped

volumes:
  postgres_data:
    name: studio_ai_postgres_data
  redis_data:
    name: studio_ai_redis_data
  app_data:
    name: studio_ai_app_data