#!/usr/bin/env node

/**
 * Simple Studio Project test
 */

import ky from 'ky'

const API_BASE = 'http://localhost:3457/api'

async function main() {
  console.log('Testing Studio project creation and agent invocation...\n')
  
  let projectId
  
  try {
    // Get agent configs
    const agents = await ky.get(`${API_BASE}/agents`).json()
    const devAgent = agents.find(a => a.role === 'dev' || a.role === 'developer')
    
    if (!devAgent) {
      throw new Error('Dev agent not found')
    }
    
    // Create project with agent
    const project = await ky.post(`${API_BASE}/studio-projects`, {
      json: {
        name: `Test Project ${Date.now()}`,
        description: 'Simple test',
        workspacePath: `/tmp/test-${Date.now()}`,
        agents: [{
          role: 'dev',
          agentConfigId: devAgent.id
        }]
      }
    }).json()
    
    projectId = project.id
    console.log(`✅ Created project: ${project.id}`)
    console.log(`✅ With agents: ${project.agents.map(a => a.role).join(', ')}`)
    
    // Get short IDs
    const shortIds = await ky.get(`${API_BASE}/studio-projects/${projectId}/agents/short-ids`).json()
    const devShortId = shortIds.agents.find(a => a.role === 'dev')?.shortId
    
    console.log(`✅ Agent short ID: ${devShortId}`)
    
    // Test invocation
    const result = await ky.post(`${API_BASE}/invoke`, {
      json: {
        workflow: {
          agentId: devShortId,
          task: 'What is 2 + 2? Just the number.'
        },
        projectId: projectId
      },
      timeout: 30000
    }).json()
    
    console.log(`✅ Result: ${JSON.stringify(result.results)}`)
    console.log(`✅ Status: ${result.status}`)
    
    // Cleanup
    await ky.delete(`${API_BASE}/studio-projects/${projectId}`)
    console.log('✅ Cleaned up')
    
  } catch (error) {
    console.error('❌ Error:', error.message)
    if (projectId) {
      try {
        await ky.delete(`${API_BASE}/studio-projects/${projectId}`)
      } catch (e) {}
    }
  }
}

main()