import fetch from 'node-fetch';

async function debugEvents() {
  console.log('🔍 Debugging EventEmitter integration...\n');
  
  // First, let's see if the EventEmitter is being created
  const debugResponse = await fetch('http://localhost:3456/api/invoke/stream/test-debug');
  const text = await debugResponse.text();
  console.log('Debug SSE response (first 200 chars):', text.slice(0, 200));
  
  // Now start a workflow and monitor
  console.log('\n🚀 Starting async workflow...');
  const response = await fetch('http://localhost:3456/api/invoke/async', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      workflow: {
        role: 'developer',
        task: 'Say hello'
      },
      projectId: '93b33a8b-dbc0-4b09-99ed-cb737239b409'
    })
  });
  
  const result = await response.json();
  console.log('Workflow started:', result);
  
  // Wait a bit
  await new Promise(r => setTimeout(r, 3000));
  
  // Check status
  const statusResponse = await fetch(`http://localhost:3456/api/invoke-status/status/${result.threadId}`);
  const status = await statusResponse.json();
  console.log('\n📊 Final status:', JSON.stringify(status, null, 2));
  
  process.exit(0);
}

debugEvents().catch(err => {
  console.error('❌ Error:', err);
  process.exit(1);
});