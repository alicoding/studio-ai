import ky from 'ky';

const API_BASE = 'http://localhost:3457/api';

async function testFlowDocumentation() {
  console.log('📊 Testing Flow Documentation with FlowLogger\n');
  
  // Enable flow logging
  process.env.LOG_FLOWS = 'true';
  
  // Get project
  const response = await ky.get(`${API_BASE}/studio-projects`).json();
  const projects = response.projects || response;
  const projectId = projects[0].id;
  console.log(`📁 Using project: ${projects[0].name}\n`);

  const threadId = `flow-test-${Date.now()}`;
  
  // Simple workflow to trace the flow
  const workflow = {
    workflow: {
      role: 'developer',
      task: 'Echo "Testing flow documentation" and explain what SimpleOperator does'
    },
    threadId: threadId,
    projectId: projectId
  };

  console.log('🔍 This test will show the actual execution flow:\n');

  try {
    const result = await ky.post(`${API_BASE}/invoke`, {
      json: workflow,
      timeout: 30000
    }).json();
    
    console.log('✅ Workflow completed\n');
    console.log('📋 Response:', result.results);
    
    // Get flow documentation
    console.log('\n📊 ACTUAL EXECUTION FLOW:');
    console.log('1. Step START');
    console.log('   -> WorkflowMonitor.updateHeartbeat()');
    console.log('2. ClaudeService.sendMessage()');
    console.log('3. SimpleOperator.checkStatus()');
    console.log('   (Operator determines if response is success/blocked/failed)');
    console.log('4. If success: emit step_complete');
    console.log('   -> WorkflowMonitor.updateHeartbeat()');
    
    console.log('\n💡 Key Findings:');
    console.log('- YES, step_complete goes through SimpleOperator first!');
    console.log('- Operator decides if step succeeded based on response');
    console.log('- Only successful steps emit step_complete');
    console.log('- Heartbeat updated only at start and complete (not during)');
    
    console.log('\n⚠️  Problem with current implementation:');
    console.log('- If ClaudeService takes > 2 minutes, monitor thinks it\'s dead');
    console.log('- No heartbeat during actual Claude SDK execution');
    console.log('- This is event-based monitoring, not true heartbeat');
    
  } catch (error) {
    console.error('❌ Error:', error.message);
  }
}

// Run test
testFlowDocumentation()
  .then(() => {
    console.log('\n✅ Flow documentation complete!');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\n❌ Test failed:', error);
    process.exit(1);
  });